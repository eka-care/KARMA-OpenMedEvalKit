---
// CopyPageButton.astro
---

<button id="copy-page-btn" class="copy-page-button" title="Copy page content">
  <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
    <rect width="14" height="14" x="8" y="8" rx="2" ry="2"></rect>
    <path d="M4 16c-1.1 0-2-.9-2-2V4c0-1.1.9-2 2-2h10c1.1 0 2 .9 2 2"></path>
  </svg>
  <span class="copy-text">Copy page</span>
</button>

<style>
  .copy-page-button {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    padding: 0.5rem 0.75rem;
    background: var(--sl-color-bg-sidebar);
    border: 1px solid var(--sl-color-gray-5);
    border-radius: 0.375rem;
    color: var(--sl-color-text);
    font-size: 0.875rem;
    font-weight: 500;
    cursor: pointer;
    transition: all 0.2s ease;
    white-space: nowrap;
  }
  
  .copy-page-button:hover {
    background: var(--sl-color-gray-6);
    border-color: var(--sl-color-gray-4);
  }
  
  .copy-page-button:active {
    transform: translateY(1px);
  }
  
  .copy-page-button svg {
    width: 16px;
    height: 16px;
    flex-shrink: 0;
  }
  
  .copy-text {
    display: inline;
  }
  
  @media (max-width: 768px) {
    .copy-text {
      display: none;
    }
  }
</style>

<script>
  function initCopyPageButton() {
    const copyButton = document.getElementById('copy-page-btn');
    if (!copyButton) return;

    copyButton.addEventListener('click', async () => {
      try {
        // Get the main content
        const article = document.querySelector('main');
        if (!article) {
          console.warn('No main element found to copy');
          return;
        }

        // Extract text content and preserve basic formatting
        let content = '';
        const walker = document.createTreeWalker(
          article,
          NodeFilter.SHOW_TEXT | NodeFilter.SHOW_ELEMENT,
          {
            acceptNode: function(node) {
              // Skip script and style elements
              if (node.nodeType === Node.ELEMENT_NODE) {
                const tagName = node.tagName.toLowerCase();
                if (tagName === 'script' || tagName === 'style') {
                  return NodeFilter.FILTER_REJECT;
                }
              }
              return NodeFilter.FILTER_ACCEPT;
            }
          }
        );

        let currentNode;
        while (currentNode = walker.nextNode()) {
          if (currentNode.nodeType === Node.TEXT_NODE) {
            const text = currentNode.textContent?.trim();
            if (text) {
              content += text + ' ';
            }
          } else if (currentNode.nodeType === Node.ELEMENT_NODE) {
            const tagName = currentNode.tagName.toLowerCase();
            // Add line breaks for block elements
            if (['h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'p', 'div', 'li'].includes(tagName)) {
              if (content && !content.endsWith('\n')) {
                content += '\n';
              }
            }
            // Add extra line breaks for headings
            if (['h1', 'h2', 'h3', 'h4', 'h5', 'h6'].includes(tagName)) {
              content += '\n';
            }
          }
        }

        // Clean up the content
        content = content
          .replace(/\n\s*\n\s*\n/g, '\n\n') // Remove excessive line breaks
          .replace(/^\s+|\s+$/g, '') // Trim start and end
          .replace(/ +/g, ' '); // Remove excessive spaces

        if (!content) {
          console.warn('No content found to copy');
          return;
        }

        // Copy to clipboard
        await navigator.clipboard.writeText(content);
        
        // Visual feedback
        const originalText = copyButton.querySelector('.copy-text')?.textContent;
        const textElement = copyButton.querySelector('.copy-text');
        if (textElement) {
          textElement.textContent = 'Copied!';
          setTimeout(() => {
            textElement.textContent = originalText || 'Copy page';
          }, 2000);
        }

      } catch (error) {
        console.error('Failed to copy page content:', error);
        
        // Fallback visual feedback for error
        const textElement = copyButton.querySelector('.copy-text');
        if (textElement) {
          const originalText = textElement.textContent;
          textElement.textContent = 'Failed to copy';
          setTimeout(() => {
            textElement.textContent = originalText || 'Copy page';
          }, 2000);
        }
      }
    });
  }

  // Initialize when DOM is loaded
  if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', initCopyPageButton);
  } else {
    initCopyPageButton();
  }

  // Re-initialize on page navigation (for SPA behavior)
  document.addEventListener('astro:page-load', initCopyPageButton);
</script>